<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kernel on MyThinkPond</title>
    <link>http://MyThinkPond.com/categories/kernel/</link>
    <description>Recent content in Kernel on MyThinkPond</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Nov 2016 16:45:30 +0000</lastBuildDate>
    <atom:link href="http://MyThinkPond.com/categories/kernel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to sync your date when you restore a VirtualBox snapshot?</title>
      <link>http://MyThinkPond.com/2016/11/05/how-to-sync-your-date-when-you-restore-a-virtualbox-snapshot/</link>
      <pubDate>Sat, 05 Nov 2016 16:45:30 +0000</pubDate>
      <guid>http://MyThinkPond.com/2016/11/05/how-to-sync-your-date-when-you-restore-a-virtualbox-snapshot/</guid>
      <description>This article focuses on synchronizing/updating the clock in your guest linux VM after you restore a VirtualBox snapshot.&#xA;When you create a VirtualBox snapshot, it&amp;rsquo;s essentially a photo taken and frozen in time. All bits including the date and time are frozen to that instant. When you restore a snapshot, the Linux guest VM system is restored back to that snapshot including the date and time. This may not be desired all the time especially if the purpose is to restore the configuration and settings to an earlier time but your want to roll forward the clock on the VM to the present instance.</description>
    </item>
    <item>
      <title>How to configure and install ZeroMQ (libsodium) on CentOS 6.7?</title>
      <link>http://MyThinkPond.com/2015/09/07/how-to-install-and-configure-zeromq-libsodium-on-centos-6-7/</link>
      <pubDate>Mon, 07 Sep 2015 02:02:54 +0000</pubDate>
      <guid>http://MyThinkPond.com/2015/09/07/how-to-install-and-configure-zeromq-libsodium-on-centos-6-7/</guid>
      <description>When getting started on ZeroMQ (version 4.2.0 or above) can be quite challenging especially with all the prerequisites. I&amp;rsquo;ve spent a good two days to get the process ironed out. So I&amp;rsquo;m sharing this so that others can avoid the same pitfalls and can have a good head-start with setting up their environment.&#xA;Pitfall #1: Develop for your platform. I&amp;rsquo;m accustomed to developing in Ubuntu 14.04.3 LTE but in this case my deployment environment happens to be CentOS 6.</description>
    </item>
    <item>
      <title>[Solved] configure: error: cannot run C compiled programs.</title>
      <link>http://MyThinkPond.com/2015/09/07/solved-configure-error-cannot-run-c-compiled-programs/</link>
      <pubDate>Mon, 07 Sep 2015 01:11:46 +0000</pubDate>
      <guid>http://MyThinkPond.com/2015/09/07/solved-configure-error-cannot-run-c-compiled-programs/</guid>
      <description>Common error when you run configure before make &amp;amp;&amp;amp; make install:&#xA;checking whether the C compiler works&amp;hellip; configure: error: in /root/downloads/libzmq-master&#39;: configure: error: cannot run C compiled programs. If you meant to cross compile, use &amp;ndash;host&#39;.&#xA;Add the following into your /root/.bashrc or /home/{username}/.bashrc&#xA;[sourcecode language=&amp;ldquo;jscript&amp;rdquo;]&#xA;export CPATH=/usr/local/include export LIBRARY_PATH=/usr/local/lib export LD_LIBRARY_PATH=/usr/local/lib export LD_RUN_PATH=/usr/local/lib&#xA;[/sourcecode]&#xA;Logout and login to reinitialize .bashrc or do the following:&#xA;[sourcecode language=&amp;ldquo;jscript&amp;rdquo;]&#xA;source /root/.bashrc&#xA;or source /home/{username}/.</description>
    </item>
  </channel>
</rss>
